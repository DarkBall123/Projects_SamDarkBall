class CfgSkeletons
{

	class Default
	{
		isDiscrete = 1;
		skeletonInherit = "";
		skeletonBones[] = {};
	};
	class Vehicle : Default {};	
	class Plane: Vehicle {};
	
	
	class ghostSkeleton: Plane
	{
		
		skeletonInherit = "Plane";
		skeletonBones[] = 		
		{
		
			"leva vejskovka","",
		    "leva smerovka","",	
			
			"lkh klapka","",
			"pkh klapka","",
			
			"wheel_turn","",
			"wheel_1","",
			"wheel_3","wheel_turn",
			
		
			"stick_pilot","",
			"stick_copilot", "",
			"pedal1","",
			
			
			"rotor","",		
			"vrtule","",
			"vrtule blur","",
			"vrtule hide","vrtule",
			
		};
	};
};


class CfgModels
{
	class Default
	{
		sectionsInherit="";
		sections[] = {};
		skeletonName = "";
	};
	
	class Vehicle: Default {};
	
	class Plane : Vehicle {};
	
	class ghost: Plane
	{
		skeletonName="ghostSkeleton";
		sections[]=
		{
			
			"clan",
			"clan_sign",
			"vrtule staticka",
			"vrtule blur",
			
				
			"camo1",
		};
		
		class Animations
		{		
			class rpm
			{
				type="rotation";
				source="rpm";
				selection="ins_rpm";
				axis="axis_rpm";
				memory=1;
				minValue=0;
				maxValue=1;
				angle0="rad 100";
				angle1="rad 310";
			};
			
			class rpm2 : rpm
			{
				selection="ins_rpm2";
				axis="axis_rpm2";
			};
		
			
			class ElevatorL
			{
				type="rotation";
				source="elevator";
				selection="leva vejskovka";
				axis="osa leve vejskovky";
				minValue=-1;
				maxValue=1;
				angle0="rad 30";
				angle1="rad -30";
			};
			
		
			class AileronL
			{
				type="rotation";
				source="aileron";
				selection="lkh klapka";
				axis="osa lkh klapky";
				minValue=-0.500000;
				maxValue=0.500000;
				angle0="rad -30";
				angle1="rad 30";
			};
					
			class AileronR2: AileronL
			{
				selection="pkh klapka";
				axis="osa pkh klapky";
			};
		

			class Rudder
			{
				type="rotation";
				source="rudder";
				selection="leva smerovka";
				axis="osa leve smerovky";
				minValue=-1;
				maxValue=1;
				angle0="rad 35";
				angle1="rad -35";
			};
	

			
			
			class wheel_1
			{
				type="rotation";
				source="wheel";
                selection="wheel_1";
				axis="wheel_axis";
			
				memory=1;
                sourceAddress = "loop";
				minValue = 0.0;
				maxValue = 1.0;
            	angle0=rad 0;
				angle1=rad -360;
			};
			class wheel_3: wheel_1
			{
				selection="wheel_3";
                axis="wheel3_axis";
			};
			class wheel_3_turn
			{
				type="rotation";
				source="noseWheelTurn";
				selection="wheel_turn";
				axis="axis_wheel_turn";
				minValue=-1;
				maxValue=1;
				angle0="rad 18";
				angle1="rad -18";
			};
		
		
		
		
		
	

	
			
			class Stick_Pilot_Bank
			{
				type="rotation";
				axis="stick_pilot_ail_axis";
				source="aileron";
				selection="stick_pilot";
				minValue=-1;
				maxValue=1;
				angle0="rad -10";
				angle1="rad 10";
			};
			
			class Stick_Copilot_Bank: Stick_Pilot_Bank
			{
				selection="stick_copilot";
				axis="stick_copilot_ail_axis";
				angle0="rad 10";
				angle1="rad -10";
			};
			
			class Stick_Pilot_Dive
			{
				type="rotation";
				axis="stick_pilot_ele_axis";
				source="elevator";
				selection="stick_pilot";
				minValue=-1;
				maxValue=1;
				angle0="rad -10";
				angle1="rad 10";
			};
			
			class Stick_Copilot_Dive: Stick_Pilot_Dive
			{
				selection="stick_copilot";
				axis="stick_copilot_ele_axis";
			};
			
			
			class rotor
			{
				type="rotation";
				source="rotor";
				selection="vrtule";
				axis="osa vrtule";
				sourceAddress="loop";
				minValue = 0.0;
				maxValue = 0.2;
				angle0=rad 0;
				angle1=rad 360;
				
				
			};
			
			
			class rotor_hide
			{
				type="hide";
				source="rpm";
				selection="vrtule hide";
				HideValue = "0.5";
			};
			
			
			
			
			class propeller_blur
			{
				type = "rotation";
				source="rotor";
				selection="vrtule blur";
				axis="osa vrtule";
				sourceAddress="loop";
				minValue = 0.0;
				maxValue = 0.2;
				angle0=rad 0;
				angle1=rad 90;
			};
			
			class propeller_blur_hide
			{
				type="hide";
				source="rpm";
				selection="vrtule blur";
				unHideValue = "0.5";

			};
		
	};
};
	
	
};